{"ast":null,"code":"/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { eventPropTypes } from './components/EditorPropTypes';\nexport var isFunction = function isFunction(x) {\n  return typeof x === 'function';\n};\n\nvar isEventProp = function isEventProp(name) {\n  return name in eventPropTypes;\n};\n\nvar findEventHandlers = function findEventHandlers(props) {\n  return Object.keys(props).filter(isEventProp).filter(function (name) {\n    return isFunction(props[name]);\n  }).map(function (name) {\n    return {\n      handler: props[name],\n      eventName: name.substring(2)\n    };\n  });\n};\n\nexport var bindHandlers = function bindHandlers(editor, props, boundHandlers) {\n  findEventHandlers(props).forEach(function (found) {\n    // Unbind old handler\n    var oldHandler = boundHandlers[found.eventName];\n\n    if (isFunction(oldHandler)) {\n      editor.off(found.eventName, oldHandler);\n    } // Bind new handler\n\n\n    var newHandler = function newHandler(e) {\n      return found.handler(e, editor);\n    };\n\n    boundHandlers[found.eventName] = newHandler;\n    editor.on(found.eventName, newHandler);\n  });\n};\nvar unique = 0;\nexport var uuid = function uuid(prefix) {\n  var date = new Date();\n  var time = date.getTime();\n  var random = Math.floor(Math.random() * 1000000000);\n  unique++;\n  return prefix + '_' + random + unique + String(time);\n};\nexport var isTextarea = function isTextarea(element) {\n  return element !== null && element.tagName.toLowerCase() === 'textarea';\n};\n\nvar normalizePluginArray = function normalizePluginArray(plugins) {\n  if (typeof plugins === 'undefined' || plugins === '') {\n    return [];\n  }\n\n  return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\n\nexport var mergePlugins = function mergePlugins(initPlugins, inputPlugins) {\n  return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n};","map":null,"metadata":{},"sourceType":"module"}