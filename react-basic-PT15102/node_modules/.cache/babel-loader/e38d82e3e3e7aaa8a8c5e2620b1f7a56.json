{"ast":null,"code":"/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { uuid } from './Utils';\n\nvar createState = function createState() {\n  return {\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoaded: false\n  };\n};\n\nvar CreateScriptLoader = function CreateScriptLoader() {\n  var state = createState();\n\n  var injectScriptTag = function injectScriptTag(scriptId, doc, url, callback) {\n    var scriptTag = doc.createElement('script');\n    scriptTag.referrerPolicy = 'origin';\n    scriptTag.type = 'application/javascript';\n    scriptTag.id = scriptId;\n    scriptTag.src = url;\n\n    var handler = function handler() {\n      scriptTag.removeEventListener('load', handler);\n      callback();\n    };\n\n    scriptTag.addEventListener('load', handler);\n\n    if (doc.head) {\n      doc.head.appendChild(scriptTag);\n    }\n  };\n\n  var load = function load(doc, url, callback) {\n    if (state.scriptLoaded) {\n      callback();\n    } else {\n      state.listeners.push(callback);\n\n      if (!doc.getElementById(state.scriptId)) {\n        injectScriptTag(state.scriptId, doc, url, function () {\n          state.listeners.forEach(function (fn) {\n            return fn();\n          });\n          state.scriptLoaded = true;\n        });\n      }\n    }\n  }; // Only to be used by tests.\n\n\n  var reinitialize = function reinitialize() {\n    state = createState();\n  };\n\n  return {\n    load: load,\n    reinitialize: reinitialize\n  };\n};\n\nvar ScriptLoader = CreateScriptLoader();\nexport { ScriptLoader };","map":null,"metadata":{},"sourceType":"module"}